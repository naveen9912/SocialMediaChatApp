@page "/chat"
@inject IJSRuntime JS
@inject NavigationManager NavManager
@using Microsoft.AspNetCore.SignalR.Client

<h3 class="text-primary my-3">Live Chat</h3>

<div class="chat-box border rounded p-3 mb-3 bg-light" style="max-height: 300px; overflow-y: auto;">
    @foreach (var msg in messages)
    {
        <div><b>@msg.User:</b> @msg.Text</div>
    }
</div>

<div class="mb-2">
    <input class="form-control mb-2" @bind="user" placeholder="Name" />
    <div class="input-group">
        <input class="form-control" @bind="message" placeholder="Message" @onkeypress="HandleKeyPress" />
        <button class="btn btn-primary" @onclick="Send">Send</button>
    </div>
</div>


@code {
    private string user = "";
    private string message = "";
    private List<ChatMessage> messages = new();
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavManager.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, msg) =>
        {
            messages.Add(new ChatMessage { User = user, Text = msg });
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private async Task Send()
    {
        if (!string.IsNullOrWhiteSpace(user) && !string.IsNullOrWhiteSpace(message))
        {
            await hubConnection.SendAsync("SendMessage", user, message);
            message = "";
        }
        Console.WriteLine($"Sending: {user} says {message}");

    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
            await Send();
    }

    public class ChatMessage
    {
        public string User { get; set; }
        public string Text { get; set; }
    }
}
